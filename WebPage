#include <ESP8266WiFi.h> #include <ESP8266WebServer.h> #include <Servo.h>

#include "index.h";

#define LED 2 #define ServoPin 14 //D5 is GPIO14

//WiFi Connection configuration const char ssid = "Darwish1"; const char password = "****";

Servo myservo; // create servo object to control a servo // twelve servo objects can be created on most boards

ESP8266WebServer server(80);

//================================================ void handleServo(){ String POS = server.arg("servoPOS"); int pos = POS.toInt(); myservo.write(pos); // tell servo to go to position delay(15); Serial.print("Servo Angle:"); Serial.println(pos); digitalWrite(LED,!(digitalRead(LED))); //Toggle LED server.send(200, "text/plane",""); }

void handleRoot() { String s = MAIN_page; //Read HTML contents server.send(200, "text/html", s); //Send web page }

//================================================ // Setup //================================================ void setup() { delay(1000); Serial.begin(115200); Serial.println();

pinMode(LED,OUTPUT); myservo.attach(ServoPin); // attaches the servo on GIO2 to the servo object

//Connect to wifi Network WiFi.begin(ssid, password); //Connect to your WiFi router Serial.println("");

// Wait for connection while (WiFi.status() != WL_CONNECTED) { delay(500); Serial.print("."); }

//If connection successful show IP address in serial monitor Serial.println(""); Serial.print("Connected to "); Serial.println(ssid); Serial.print("IP address: "); Serial.println(WiFi.localIP()); //IP address assigned to your ESP

//Initialize Webserver server.on("/",handleRoot); Serial.println("p"); server.on("/setPOS",handleServo); //Sets servo position from Web request server.begin();
}

//================================================ // LOOP //================================================ void loop() { server.handleClient(); } //================================================ const char MAIN_page[] PROGMEM = R"=====(

<title>ESP8266 Servo | </title> <style> .angle{ width: 79px; height: 50px; position: absolute; vertical-align: middle; margin-top: 50px; margin-left: -114px; border: 0px none; background: rgba(0, 0, 0, 0) none repeat scroll 0% 0%; font: normal normal bold normal 20px Arial; text-align: center; color: rgb(34, 34, 34); padding: 0px; }
.spd{ width: 79px; height: 50px; position: absolute; vertical-align: middle; margin-top: 50px; margin-left: -114px; border: 0px none; background: rgba(0, 0, 0, 0) none repeat scroll 0% 0%; font: normal normal bold normal 50px Arial; text-align: center; color: rgb(34, 34, 34); padding: 0px; }

.imageDiv{ padding: 5%; }

.flx{ display: flex; }

</style>
Smart Light
ESP8266 Servo Motor Control Demo
0 Servo Angle
<script> function sendData(pos) { var xhttp = new XMLHttpRequest(); xhttp.onreadystatechange = function() { if (this.readyState == 4 && this.status == 200) { console.log(this.responseText); } }; xhttp.open("GET", "setPOS?servoPOS="+pos, true); xhttp.send(); } function polarToCartesian(centerX, centerY, radius, angleInDegrees) { var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0; return { x: centerX + (radius * Math.cos(angleInRadians)), y: centerY + (radius * Math.sin(angleInRadians)) }; } function describeArc(x, y, radius, startAngle, endAngle){ var start = polarToCartesian(x, y, radius, endAngle); var end = polarToCartesian(x, y, radius, startAngle); var largeArcFlag = endAngle - startAngle <= 180 ? "0" : "1"; var d = [ "M", start.x, start.y, "A", radius, radius, 0, largeArcFlag, 0, end.x, end.y ].join(" "); return d; } window.onload = function() { document.getElementById("arc1").setAttribute("d", describeArc(250, 250, 200, 220, 210)); }; var svg = document.getElementById("mySVG"); pt = svg.createSVGPoint(), svg.addEventListener('mousedown',function(evt){ var loc = cursorPoint(evt); var degrees = Math.atan2(loc.x-250,loc.y-250)*180/Math.PI + 90; var offset = 220; degrees = (degrees + 90) degrees = degrees + offset; if(degrees > 360) { degrees = degrees - 360; } degrees = 360 - degrees; angle = degrees + offset; console.log(degrees, angle); if(degrees<281) { document.getElementById("arc1").setAttribute("d", describeArc(250, 250, 200, offset, angle)); var servoAng = Math.round(((angle - 220)/280) * 100); document.getElementById("angle").innerHTML=servoAng; sendData(servoAng); } }); // Get point in global SVG space function cursorPoint(evt){ pt.x = evt.clientX; pt.y = evt.clientY; return pt.matrixTransform(svg.getScreenCTM().inverse()); } </script> )=====";
